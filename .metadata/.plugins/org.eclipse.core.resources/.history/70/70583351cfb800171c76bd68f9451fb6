package server;

import java.util.ArrayList;
import java.util.List;

import common.Request;
import common.Space;
import javafx.util.Pair;
import server.Server.SERVER_TASK;

public class Lobby extends Receiver {
	private String name;
	private List<Room> roomList;

	Lobby(String name, Receiver parent){
		super(parent);
		this.name = name;
		this.roomList = new ArrayList<Room>();

		this.newRoom("YOLO");
		this.newRoom("YOYO");
		this.newRoom("XOXO");
	}

	public String getLobbyName(){
		return this.name;
	}

	@Override
	protected void sendRespond() {
	}
	@Override
	protected void loop() {
	}
	public List<Room> getRoomList() {
		return roomList;
	}
	@Override
	protected void handleTheRequest(Pair<Request, Client> request) {
		Request req = request.getKey();
		Client client = request.getValue();

		switch(req.getCodeRequest()){
		case 200:	//get room list
			Request respond = new Request(500, this.requestGetRoomList());
			client.addRequest(respond);
			break;
		case 201:
			break;
		case 202:
			break;
		case 203:
			break;
		case 204:	//back to selecting server
			backToSever(req, client);
			break;
		default:
			break;
		}
	}

	private void backToSever(Request req, Client client){
		if (this.getParent().addClient(client) ){
			client.setReceiver(this.getParent());
			this.removeClient(client);
			client.addRequest(new Request(402, null));
			((Server) this.getParent()).newTask(SERVER_TASK.RefershAllLobbyLists);
		}
	}

	private List<Space> requestGetRoomList(){
		List<Space> result = new ArrayList<Space>();

		for (Room room : this.roomList) {
			result.add(new Space( room.getRoomName(), room.getMyId(), room.getClientList().size()));
		}

		return result;
	}

	private void newRoom(String name){
		Room room = new Room( name, this );
		roomList.add(room);
		room.start();
	}

}
